<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace는 패키지 포함한 mapper(DAO interface) 이름으로 설정 한다. -->
<mapper namespace="com.uplus.eureka.book.model.dao.BookDao">

    <!-- 자주 사용하는 쿼리를 상용구 처럼 sql 태그를 이용해서 등록해서 재사용할 수 있다. -->

    <sql id="searchCon">
        <if test="key != null and key != 'all' and word != null and word != ''">
            <choose>
                <when test="key == 'title'">
                    title like concat('%', #{word}, '%')
                </when>
                <when test="key == 'author'">
                    author like concat('%', #{word}, '%')
                </when>
            </choose>
        </if>
    </sql>

    <!--	id : mapping될 함수 이름으로 설정
            parameterType : 메서드 인자 타입
            resultType : 쿼리를 수행한 결과(컬럼 데이타)를 담을 클래스 타입
            미리 등록된 alias: mybatis-xxx/jar > org.mybatis.type.Alias.java
            컬럼명이 속성명과 다른 경우, alias를 통해 맞춰준다.
            resultMap : resultType과 동일하게 컬럼 데이타를 담을 클래스 타입을 지정한다.
    -->
    <select id="search" parameterType="string" resultType="Book">
        select isbn,
               title,
               author,
               price,
               describ,
               img
        from book
        where isbn = #{isbn}
    </select>
    <!--
     resultType은 select문을 수행한 결과 중 1개 컬럼 데이타를 매핑할 타입을 지정한다.
    MyBatis가 List 객체를 생성해서 매핑한 객체를 add 해준다.
     -->
    <select id="searchAll" parameterType="PageBean" resultType="Book">
        select
        * from book
        <where>
            <include refid="searchCon"/>
        </where>
        order by isbn
        limit #{start}, #{interval}
    </select>

    <select id="totalCount" parameterType="PageBean" resultType="int">
        selelct
        count(*) from book
    </select>

    <insert id="insert" parameterType="Book">
        insert into book (isbn, title, author, price, describ, img)
        values (#{isbn}, #{title}, #{author}, #{price}, #{describ}, #{img})
    </insert>

    <update id="update" parameterType="Book">
        update book
        set title   = #{title},
            author  = #{author},
            price   = #{price},
            describ = #{describ},
            img     = #{img}
        where isbn = #{isbn}
    </update>

    <delete id="remove" parameterType="String">
        delete from book
        where isbn = #{isbn}
    </delete>

</mapper>


